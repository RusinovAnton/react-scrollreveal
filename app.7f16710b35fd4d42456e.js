webpackJsonp([0],{224:function(e,n,t){var r=t(1),o=t(121);o.__esModule&&(o=o.default),e.exports=r.createClass({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:t(553)}},componentWillMount:function(){},render:function(){return r.createElement(o,Object.assign({},this.props,{content:this.state.content}))}})},225:function(e,n){},226:function(e,n){},228:function(e,n,t){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}var o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},a=t(1),l=r(a),c=t(51),i=r(c),s=t(227),u=r(s),p=t(223);t(226),t(225);var m={},f=[{path:"/",title:"Introduction",component:t(224)}];i.default.render(l.default.createElement("div",null,l.default.createElement(u.default,{href:"https://github.com/undefined/react-scrollreveal",bannerColor:"#fff",octoColor:"#000",width:80,height:80,direction:"right"}),l.default.createElement(p.Catalog,{imports:m,pages:f,specimens:{javascript:function(e){return l.default.createElement(p.CodeSpecimen,o({},e,{lang:"javascript"}))},js:function(e){return l.default.createElement(p.CodeSpecimen,o({},e,{lang:"javascript"}))},jsx:function(e){return l.default.createElement(p.ReactSpecimen,e)}},title:"react-scrollreveal v1.0.1"})),document.getElementById("app"))},553:function(e,n){e.exports="# REACT-SCROLLREVEAL\nReact high order component that provides [scrollreveal](https://github.com/jlmakes/scrollreveal) functionality\n\n## Usage\n- Install `npm i --save react-scrollreveal`\n- Wrap component with HOC\n```javascript\nimport React from 'react'\nimport withScrollReveal from 'react-scrollreveal'\n\nclass MyComponent extends React.Component {\n  render() {\n    const { animationContainerReference } = this.props;\n    \n    return (\n      <div ref={animationContainerReference}>\n        ...\n      </div>\n    )\n  }\n}\n\nexport default withScrollReveal([\n  {\n    selector: '.sr-item',\n    options: {\n      reset: true,\n    },\n  },\n  {\n    selector: '.sr-item--sequence',\n    options: {\n      reset: true,\n      delay: 400,\n    },\n    interval: 100\n  }\n])(MyComponent) \n```\n- ???\n- PROFIT\n\n## Reference\nwithScrollReveal HOC arguments.  \nYou have to provide object or array of objects with shape that described bellow:\n\n{  \n  selector {string} - css selector to get DOM nodes that init scrollreveal on   \n  options {object} - [scrollreveal configuration](https://github.com/jlmakes/scrollreveal#2-configuration)  \n  interval {number} - interval in milliseconds to create [animation sequence](https://github.com/jlmakes/scrollreveal#3-advanced) for selected elements  \n}\n\n  \nWrapped component props:\n- animationContainerReference {function} - you have to set reference of your animated elements' container\n- destroyRevealAnimation {function} - remove all styles, event listeners\n- refreshRevealAnimation {function} - reset all styles for all sr elements\n"}},[228]);